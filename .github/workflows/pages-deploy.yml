name: "deploy wasm32 build to pages"

on:
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: "read"
  pages: "write"
  id-token: "write"

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: "github-pages"
      url: "${{ steps.deployment.outputs.page_url }}"

    env:
      RUSTFLAGS: |
        --cfg getrandom_backend="wasm_js"

    runs-on: "ubuntu-latest"
    steps:
      - name: "git checkout"
        uses: "actions/checkout@v4"
        with:
          lfs: true

      - name: "configure pages"
        uses: "actions/configure-pages@v5"

      - name: "install rust"
        uses: "dtolnay/rust-toolchain@nightly"
        with:
          toolchain: "nightly-2025-03-12"
          targets: "wasm32-unknown-unknown"
          components: "llvm-tools"

      - name: "set up rust cache"
        uses: "actions/cache@v4"
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: "${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}"

      - name: "set up wasm tool cache"
        id: "wasm-tool-cache"
        uses: "actions/cache@v4"
        with:
          path: |
            ~/.cargo/bin/wasm-bindgen
            ~/.cargo/bin/wasm-bindgen-test-runner
            ~/.cargo/bin/wasm2es6js
          key: "${{ runner.os }}-wasmtools"

      - name: "install wasm tools"
        if: "steps.wasm-tool-cache.outputs.cache-hit != 'true'"
        run: "cargo install wasm-bindgen-cli"

      - name: "build wasm32 blob"
        run: "cargo build --release --target wasm32-unknown-unknown"

      - name: "wasm-bindgen output"
        run: "wasm-bindgen --no-typescript --target web --out-dir _out --out-name pretty-claws target/wasm32-unknown-unknown/release/pretty-claws.wasm"

      - name: "wasm-opt output"
        uses: "NiklasEi/wasm-opt-action@v2"
        with:
          file: "_out/*.wasm"
          optimize_all: true
          options: "-Oz"

      - name: "copy in static files"
        run: "mkdir _out/assets && cp -av pretty-claws/assets/*.{wgsl,png,ttf} _out/assets && cp -av .github/pages-template/* _out"

      - name: "upload pages artifact"
        uses: "actions/upload-pages-artifact@v3"
        with:
          path: "_out"

      - name: "deploy pages"
        uses: "actions/deploy-pages@v4"
        id: "deployment"
